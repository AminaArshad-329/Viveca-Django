package{import flash.external.ExternalInterface;import flash.media.Sound;import flash.net.URLRequest;import flash.media.SoundChannel;import flash.display.Sprite;import flash.media.SoundMixer;import flash.events.Event;import flash.utils.Timer;import flash.events.TimerEvent;public class CrbUI_AudioPlayer extends Sprite{	private var _channel:SoundChannel;	private var _audio:Sound;	private var _timer:Timer = new Timer( 500 );	private var _position:Number = 0;		public function CrbUI_AudioPlayer()	{		ExternalInterface.addCallback( '_play', _play );		ExternalInterface.addCallback( '_resume', _resume );		ExternalInterface.addCallback( '_pause', _pause );		ExternalInterface.addCallback( '_stop', _stop );		_timer.addEventListener( TimerEvent.TIMER, this.onPosition );
		if( ExternalInterface.available )
			ExternalInterface.call( 'CrbUI_AP.swfReady' );	}		private final function _play( url:String ) : void	{		if( _audio )		{			_timer.reset();			if( _channel )			{				_channel.removeEventListener( Event.SOUND_COMPLETE, this.onEnded );				_channel.stop();			}			try			{				_audio.close();			} catch( e:Error ){}		}		_audio = new Sound();		_audio.load( new URLRequest( url ) );		_channel = _audio.play();		_channel.addEventListener( Event.SOUND_COMPLETE, this.onEnded );		_timer.start();	}		private final function _resume() : void	{		_channel = _audio.play( _position );		_channel.addEventListener( Event.SOUND_COMPLETE, this.onEnded );		_timer.start();	}		private final function _pause() : void	{		_timer.reset();		_position = _channel.position;		_channel.removeEventListener( Event.SOUND_COMPLETE, this.onEnded );		_channel.stop();		SoundMixer.stopAll();	}		private final function _stop() : void	{		_timer.reset();		_channel.removeEventListener( Event.SOUND_COMPLETE, this.onEnded );		_channel.stop();		SoundMixer.stopAll();	}		private final function onEnded( e:Event ) : void	{		if( ExternalInterface.available )			ExternalInterface.call( 'CrbUI_AP.onEnded' );	}		private final function onPosition( e:TimerEvent ) : void	{		if( ExternalInterface.available )			ExternalInterface.call( 'CrbUI_AP.onPosition', _channel.position / _audio.length );	}}}