# Generated by Django 3.2.7 on 2021-09-01 19:11

import airadio.models.library
import airadio.models.playlist
import airadio.models.settings
import airadio.models.users
from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Advert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=25, verbose_name='Title')),
                ('social_media_handle', models.URLField(blank=True, verbose_name='Social link')),
                ('advert_type', models.BooleanField(choices=[(1, 'audio'), (2, 'video'), (3, 'banner'), (4, 'microsite')], default=1, verbose_name='Advert type')),
                ('media', models.FileField(blank=True, upload_to='advert', verbose_name='Media')),
                ('cover_art', models.FileField(blank=True, upload_to="/static/", verbose_name='Cover art')),
                ('skip_allowed', models.BooleanField(choices=[(1, 'Yes'), (2, 'No')], default=1, verbose_name='Skip allowed')),
                ('age_group', models.PositiveSmallIntegerField(choices=[(1, 'Teens'), (2, 'P18-34'), (3, 'P25-34'), (4, 'P34-45'), (5, 'P45+')], verbose_name='Age group')),
                ('related_market', models.URLField(blank=True, verbose_name='Related Market')),
                ('relative_link', models.URLField(blank=True, verbose_name='Relative Link')),
                ('in_point', models.IntegerField(verbose_name='Mark In')),
                ('aux_point', models.IntegerField(verbose_name='Mark Aux')),
            ],
            options={
                'verbose_name': 'Advert',
                'verbose_name_plural': 'Advert',
                'db_table': 'advert',
            },
        ),
        migrations.CreateModel(
            name='Analytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('unique_users', models.PositiveIntegerField(verbose_name='Unique Users')),
                ('current_users', models.PositiveIntegerField(verbose_name='Current Users')),
                ('s3_data_usage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Cloud Files')),
                ('db_load', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Database Load')),
                ('male', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Male')),
                ('female', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Female')),
                ('iphone', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='iPhone')),
                ('android', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Android')),
                ('web_palyer', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='WebPlayer')),
            ],
            options={
                'verbose_name': 'Analytics',
                'verbose_name_plural': 'Analytics',
                'db_table': 'analytics',
            },
        ),
        migrations.CreateModel(
            name='AuthorizedRetailUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=255)),
                ('ipaddress', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Authorized Retail User',
                'verbose_name_plural': 'Authorized Retail Users',
                'db_table': 'authorizedretailuser',
            },
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Dashboard',
                'verbose_name_plural': 'Dashboard',
                'db_table': 'dashboard',
            },
        ),
        migrations.CreateModel(
            name='DJTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'DJTag',
                'verbose_name_plural': 'DJTags',
                'db_table': 'djtag',
            },
        ),
        migrations.CreateModel(
            name='ExportPlaylist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour', models.PositiveIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, '23'), (24, '24')])),
            ],
            options={
                'verbose_name': 'ExportPlaylist',
                'verbose_name_plural': 'ExportPlaylists',
                'ordering': ['hour'],
            },
        ),
        migrations.CreateModel(
            name='Genres',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Updated')),
            ],
            options={
                'verbose_name': 'Genre',
                'verbose_name_plural': 'Genres',
                'db_table': 'genres',
            },
        ),
        migrations.CreateModel(
            name='Installation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_token', models.TextField()),
            ],
            options={
                'verbose_name': 'Installation',
                'verbose_name_plural': 'Installations',
                'db_table': 'installation',
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artistname', models.CharField(max_length=25, verbose_name='Artist')),
                ('title', models.CharField(max_length=25, verbose_name='Title')),
                ('love_rating', models.IntegerField(verbose_name='Love rating')),
                ('media', models.URLField(verbose_name='Media URL')),
                ('cover_art', models.FileField(blank=True, upload_to=airadio.models.library.get_file_path_for_library_cover, verbose_name='Cover art')),
                ('release_year', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)])),
                ('skip_allowed', models.BooleanField(default=True, verbose_name='Skip allowed')),
                ('duration', models.CharField(max_length=25, verbose_name='Duration')),
                ('genre', models.IntegerField(choices=[(1, 'Pop'), (2, 'Dance'), (3, 'Rock'), (4, 'Ballad'), (5, 'Urban')], default=1, verbose_name='Genre')),
                ('rotation_category', models.IntegerField(choices=[(1, 'G'), (2, 'R'), (3, 'N'), (4, 'C'), (5, 'B'), (6, 'A')], default=3, verbose_name='Rotation')),
                ('twitter_name', models.URLField(blank=True, verbose_name='Twitter')),
                ('facebook_name', models.URLField(blank=True, null=True, verbose_name='Facebook')),
                ('instagram_name', models.URLField(blank=True, null=True, verbose_name='Instagram')),
                ('youtube_name', models.URLField(blank=True, null=True, verbose_name='YouTube')),
                ('in_point', models.CharField(max_length=25, verbose_name='Mark In')),
                ('aux_point', models.CharField(max_length=25, verbose_name='Mark Aux')),
                ('vox_point', models.CharField(blank=True, max_length=25, null=True, verbose_name='Mark Vox')),
                ('relative_link', models.URLField(blank=True, verbose_name='Relative Link')),
            ],
            options={
                'verbose_name': 'Library',
                'verbose_name_plural': 'Library',
                'db_table': 'library',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_country', models.CharField(max_length=255, verbose_name='Country')),
                ('location_state', models.CharField(max_length=255, verbose_name='State')),
                ('location_city', models.CharField(max_length=255, verbose_name='City')),
                ('location_lat', models.DecimalField(decimal_places=8, max_digits=11, verbose_name='Latitude')),
                ('location_long', models.DecimalField(decimal_places=8, max_digits=11, verbose_name='Longitude')),
            ],
            options={
                'verbose_name': 'Locations',
                'verbose_name_plural': 'Locations',
                'db_table': 'locations',
            },
        ),
        migrations.CreateModel(
            name='MediaUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media', models.FileField(upload_to=airadio.models.library.get_file_path, verbose_name='Media')),
                ('type', models.CharField(max_length=255, verbose_name='Service Type')),
                ('name_id_val', models.PositiveIntegerField(verbose_name='Filename Value')),
            ],
            options={
                'verbose_name': 'Media Upload',
                'verbose_name_plural': 'Media Uploads',
            },
        ),
        migrations.CreateModel(
            name='Platforms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform_used', models.PositiveSmallIntegerField(choices=[(1, 'iOS'), (2, 'Android'), (3, 'Web')], verbose_name='Platform')),
            ],
            options={
                'verbose_name': 'Platforms',
                'verbose_name_plural': 'Platforms',
                'db_table': 'platforms',
            },
        ),
        migrations.CreateModel(
            name='Stations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_name', models.CharField(max_length=255, verbose_name='Station name')),
                ('station_logo', models.FileField(blank=True, upload_to=airadio.models.settings.get_file_path, verbose_name='Station logo')),
                ('station_preview', models.FileField(blank=True, upload_to=airadio.models.settings.get_file_path, verbose_name='Station preview')),
                ('station_description', models.TextField(blank=True, max_length=200, null=True, verbose_name='Station description')),
                ('order_id', models.IntegerField(verbose_name='Order')),
                ('retail', models.BooleanField(default=False, verbose_name='Is Retail ?')),
                ('retailcode', models.CharField(blank=True, max_length=255, null=True, verbose_name='Station Retail Code')),
                ('streaming', models.BooleanField(default=False, verbose_name='Is Streaming ?')),
                ('stream_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='Station Stream URL')),
                ('microsite', models.CharField(blank=True, max_length=255, null=True, verbose_name='Microsite URL')),
                ('published', models.BooleanField(default=True, verbose_name='Is Published ?')),
                ('location', models.ManyToManyField(blank=True, to='airadio.Locations')),
            ],
            options={
                'verbose_name': 'Stations',
                'verbose_name_plural': 'Stations',
                'db_table': 'stations',
                'ordering': ['order_id'],
            },
        ),
        migrations.CreateModel(
            name='WidgetUserStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_count', models.PositiveIntegerField(default=0)),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airadio.stations')),
            ],
            options={
                'verbose_name': 'Widget User Statistics',
                'verbose_name_plural': 'Widget User Statistics',
                'db_table': 'widgetuserstatistics',
            },
        ),
        migrations.CreateModel(
            name='Wall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_art', models.FileField(upload_to=airadio.models.library.get_file_path_for_wall_cover, verbose_name='Cover art')),
                ('media', models.URLField(verbose_name='Media URL')),
                ('youtube', models.URLField(blank=True, null=True, verbose_name='Youtube URL')),
                ('artist', models.CharField(max_length=25, verbose_name='Artist')),
                ('title', models.CharField(max_length=25, verbose_name='Title')),
                ('social_media_handle', models.URLField(blank=True, null=True, verbose_name='Share link')),
                ('relative_link', models.URLField(blank=True, null=True, verbose_name='Relative Link')),
                ('skip_allowed', models.BooleanField(default=True, verbose_name='Skip allowed')),
                ('studio_only', models.BooleanField(default=False, verbose_name='Studio Only')),
                ('rating', models.IntegerField(verbose_name='Rating')),
                ('schedule_item', models.BooleanField(default=False, verbose_name='Schedule item')),
                ('in_point', models.CharField(max_length=200, verbose_name='Mark In')),
                ('aux_point', models.CharField(max_length=200, verbose_name='Mark Aux')),
                ('media_type', models.CharField(blank=True, choices=[('audio', 'Audio'), ('video', 'Video'), ('image', 'Image'), ('weburl', 'WebUrl')], max_length=200, null=True, verbose_name='MediaType')),
                ('ui_color_foreground', models.CharField(max_length=25, verbose_name='UIColorForeground')),
                ('ui_color_background', models.CharField(max_length=25, verbose_name='UIColorBackground')),
                ('related_station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='station_wall_contents', to='airadio.stations')),
            ],
            options={
                'verbose_name': 'Wall',
                'verbose_name_plural': 'Wall',
                'db_table': 'wall',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of birth')),
                ('user_location', models.CharField(max_length=25, verbose_name='Location')),
                ('email', models.URLField(blank=True, verbose_name='Email')),
                ('firstname', models.CharField(max_length=25, verbose_name='First name')),
                ('lastname', models.CharField(max_length=25, verbose_name='Last name')),
                ('access_level', models.PositiveSmallIntegerField(choices=[(1, 'admin'), (2, 'station'), (3, 'editor'), (4, 'studio'), (5, 'user')], verbose_name='Access level')),
                ('age_group', models.PositiveSmallIntegerField(choices=[(1, 'Teens'), (2, 'P18-34'), (3, 'P25-34'), (4, 'P34-45'), (5, 'P45+')], verbose_name='Age group')),
                ('android_installed', models.PositiveSmallIntegerField(choices=[(1, 'Yes'), (2, 'No')], verbose_name='Android installed')),
                ('ios_installed', models.PositiveSmallIntegerField(choices=[(1, 'Yes'), (2, 'No')], verbose_name='iOS installed')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Users',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='follow', max_length=255)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_activity_from_user', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_activity_to_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Activity',
                'verbose_name_plural': 'User activities',
                'db_table': 'useractivity',
            },
        ),
        migrations.CreateModel(
            name='TSUPerStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_users', models.PositiveIntegerField(default=0, verbose_name='Total Users')),
                ('avg_per_head', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Average Per Head')),
                ('avg_hour_per_user', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Average Hour Per User')),
                ('total_hours', models.PositiveIntegerField(default=0, verbose_name='Total Hours')),
                ('analytics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_tsu', to='airadio.analytics')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='station_tsu', to='airadio.stations')),
            ],
            options={
                'verbose_name': 'TSU Per Station',
                'verbose_name_plural': 'TSU Per Station',
                'db_table': 'tsuperstation',
            },
        ),
        migrations.CreateModel(
            name='StationPlaylistSocialCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('twitter_code', models.TextField(blank=True, null=True)),
                ('instagram_code', models.TextField(blank=True, null=True)),
                ('img_link', models.CharField(blank=True, max_length=255, null=True)),
                ('post_link', models.CharField(blank=True, max_length=255)),
                ('post_text', models.TextField(blank=True)),
                ('user_image_link', models.CharField(blank=True, max_length=255)),
                ('related_link_twitter', models.CharField(blank=True, max_length=255)),
                ('related_link_instagram', models.CharField(blank=True, max_length=255)),
                ('type', models.CharField(choices=[('instagram', 'Instagram'), ('twitter', 'Twitter')], default='instagram', max_length=255)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='airadio.locations')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airadio.stations')),
            ],
            options={
                'verbose_name': 'Station Playlist SocialCode',
                'verbose_name_plural': 'Station Playlist SocialCodes',
            },
        ),
        migrations.CreateModel(
            name='StationPlaylist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Updated')),
                ('skipped', models.BooleanField(default=False, verbose_name='Skip ?')),
                ('position', models.PositiveIntegerField(default=1)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_playlist', to='airadio.locations')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='station_playlist', to='airadio.stations')),
            ],
            options={
                'verbose_name': 'Station Playlist',
                'verbose_name_plural': 'Station Playlists',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='StationLibrary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(blank=True, null=True, verbose_name='Points')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airadio.library')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='station_library', to='airadio.stations')),
            ],
            options={
                'verbose_name': 'Station Library',
                'verbose_name_plural': 'Station Libraries',
                'ordering': ['-library__id'],
            },
        ),
        migrations.CreateModel(
            name='StationBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner', models.FileField(blank=True, upload_to=airadio.models.settings.get_file_path_banner, verbose_name='Banner Image')),
                ('type', models.CharField(max_length=255, verbose_name='Type')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='station_banners', to='airadio.stations')),
            ],
            options={
                'verbose_name': 'Station Banner',
                'verbose_name_plural': 'Station Banners',
                'db_table': 'stationbanner',
            },
        ),
        migrations.CreateModel(
            name='ServerStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.CharField(max_length=15, verbose_name='UniqueID')),
                ('serverDataBaseLoad', models.TextField()),
                ('serverConcurrentUsers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airadio.users')),
            ],
            options={
                'verbose_name': 'Serverstats',
                'verbose_name_plural': 'Serverstats',
                'db_table': 'serverstats',
            },
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(verbose_name='Rating')),
                ('order', models.IntegerField(verbose_name='Order')),
                ('related_station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='station_sequences', to='airadio.stations')),
            ],
            options={
                'verbose_name': 'Sequence',
                'verbose_name_plural': 'Sequence',
                'db_table': 'sequence',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Scheduling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branding', models.PositiveIntegerField(default=0, verbose_name='Insert Branding Every')),
                ('advert', models.PositiveIntegerField(default=0, verbose_name='Insert Advert Every')),
                ('link', models.PositiveIntegerField(default=0, verbose_name='Insert Link Every')),
                ('wall', models.PositiveIntegerField(default=0, verbose_name='Insert Wall Every')),
                ('rate_5', models.PositiveIntegerField(default=0, verbose_name='Music Rotation Rating-5')),
                ('rate_4', models.PositiveIntegerField(default=0, verbose_name='Music Rotation Rating-4')),
                ('rate_3', models.PositiveIntegerField(default=0, verbose_name='Music Rotation Rating-3')),
                ('rate_2', models.PositiveIntegerField(default=0, verbose_name='Music Rotation Rating-2')),
                ('rate_1', models.PositiveIntegerField(default=0, verbose_name='Music Rotation Rating-1')),
                ('seperate_genres', models.BooleanField(default=False, verbose_name='Seperate same genres ?')),
                ('seperate_genres_songs', models.IntegerField(blank=True, null=True, verbose_name='Seperate same genres songs')),
                ('related_station', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='station_schedules', to='airadio.stations', verbose_name='Station')),
            ],
            options={
                'verbose_name': 'Scheduling',
                'verbose_name_plural': 'Scheduling',
                'db_table': 'scheduling',
            },
        ),
        migrations.CreateModel(
            name='Research',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country')),
                ('location_state', models.CharField(blank=True, max_length=255, null=True, verbose_name='State')),
                ('location_city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
                ('station_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Station')),
                ('total_users', models.IntegerField(default=0)),
                ('average_per_head', models.IntegerField(default=0)),
                ('average_hour_per_user', models.IntegerField(default=0)),
                ('total_hours', models.IntegerField(default=0)),
                ('age_group', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Teens'), (2, 'P18-34'), (3, 'P25-34'), (4, 'P34-45'), (5, 'P45+')], null=True, verbose_name='Age Group')),
                ('gender', models.CharField(max_length=255, verbose_name='Gender')),
                ('love_rating', models.IntegerField(default=0)),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airadio.users')),
            ],
            options={
                'verbose_name': 'Research',
                'verbose_name_plural': 'Research',
                'db_table': 'research',
            },
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.BooleanField(choices=[(1, 'latest'), (2, 'funny'), (3, 'entertainment news'), (4, 'traffic'), (5, 'interview')], default=1, verbose_name='Content type')),
                ('title', models.CharField(max_length=15, verbose_name='Title')),
                ('artist', models.TextField(blank=True, max_length=15, null=True, verbose_name='Artist')),
                ('points', models.IntegerField(default=0)),
                ('played', models.IntegerField(default=0)),
                ('skipped', models.PositiveSmallIntegerField(choices=[(1, 'Yes'), (2, 'No')], verbose_name='Skipped')),
                ('age_group', models.PositiveSmallIntegerField(choices=[(1, 'Teens'), (2, 'P18-34'), (3, 'P25-34'), (4, 'P34-45'), (5, 'P45+')], verbose_name='Age Group')),
                ('love_rating', models.IntegerField(default=0)),
                ('related_station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airadio.stations')),
            ],
            options={
                'verbose_name': 'Reports',
                'verbose_name_plural': 'Reports',
                'db_table': 'reports',
            },
        ),
        migrations.CreateModel(
            name='RealTimeSkipLibrary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_realtime_skips', to='airadio.dashboard')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_realtime_skips_library', to='airadio.library')),
            ],
            options={
                'verbose_name': 'RealTime Skip Library',
                'verbose_name_plural': 'RealTime Skip Library',
                'db_table': 'realtimeskiplibrary',
            },
        ),
        migrations.CreateModel(
            name='RealTimeSkipData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveIntegerField(default=0, verbose_name='Value')),
                ('realtime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='realtime_data', to='airadio.realtimeskiplibrary')),
            ],
            options={
                'verbose_name': 'RealTime Skip Data',
                'verbose_name_plural': 'RealTime Skip Data',
                'db_table': 'realtimeskipdata',
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.PositiveSmallIntegerField(choices=[(1, 'latest'), (2, 'funny'), (3, 'entertainment news'), (4, 'traffic'), (5, 'interview')], verbose_name='Content type')),
                ('master_station_checksum', models.CharField(max_length=25, verbose_name='Check Sum')),
                ('personalized_station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airadio.stations')),
            ],
            options={
                'verbose_name': 'Playlist',
                'verbose_name_plural': 'Playlist',
                'db_table': 'playlist',
            },
        ),
        migrations.CreateModel(
            name='MusicResearchLibrary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_musicresearch', to='airadio.dashboard')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_music_library', to='airadio.library')),
            ],
            options={
                'verbose_name': 'Music Research Library',
                'verbose_name_plural': 'Music Research Library',
                'db_table': 'musicresearchlibrary',
            },
        ),
        migrations.CreateModel(
            name='MusicResearchData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveIntegerField(default=0, verbose_name='Value')),
                ('research', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_musicresearch_data', to='airadio.musicresearchlibrary')),
            ],
            options={
                'verbose_name': 'Music Research Data',
                'verbose_name_plural': 'Music Research Data',
                'db_table': 'musicresearchdata',
            },
        ),
        migrations.CreateModel(
            name='MarketStations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Market Name')),
                ('key', models.CharField(help_text='Avoid blank spaces if more than one word, instead use underscores.', max_length=255, unique=True, verbose_name='Market Name Key')),
                ('stations', models.ManyToManyField(related_name='station_markets', to='airadio.Stations')),
            ],
            options={
                'verbose_name': 'Market Station',
                'verbose_name_plural': 'Market Stations',
                'db_table': 'marketstations',
            },
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.BooleanField(choices=[(1, 'latest'), (2, 'funny'), (3, 'entertainment news'), (4, 'traffic'), (5, 'interview')], default=1, verbose_name='Content type')),
                ('link_type', models.BooleanField(choices=[(1, 'Content'), (2, 'Branding')], default=1, verbose_name='Link type')),
                ('related_market', models.URLField(blank=True, verbose_name='Related Market')),
                ('relative_link', models.URLField(blank=True, verbose_name='Relative Link')),
                ('in_point', models.IntegerField(verbose_name='Mark In')),
                ('aux_point', models.IntegerField(verbose_name='Mark Aux')),
                ('related_station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airadio.stations')),
            ],
            options={
                'verbose_name': 'Links',
                'verbose_name_plural': 'Links',
                'db_table': 'links',
            },
        ),
        migrations.CreateModel(
            name='ExportPlaylistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.TextField()),
                ('export', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exports', to='airadio.exportplaylist')),
            ],
            options={
                'verbose_name': 'ExportPlaylistItem',
                'verbose_name_plural': 'ExportPlaylistItems',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='exportplaylist',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='export_location', to='airadio.locations'),
        ),
        migrations.AddField(
            model_name='exportplaylist',
            name='station',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='export_station', to='airadio.stations'),
        ),
        migrations.CreateModel(
            name='DJUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.FileField(upload_to=airadio.models.users.get_file_path_for_dj_user_photo)),
                ('confirmation_code', models.CharField(blank=True, max_length=255, null=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('token', models.CharField(blank=True, editable=False, max_length=100, null=True, verbose_name='API Token')),
                ('token_stat', models.BooleanField(choices=[(True, 'Active'), (False, 'Expired')], default=False, editable=False, verbose_name='API Token Status')),
                ('expiry_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='API Token Expiry Date')),
                ('station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='station_dj_user', to='airadio.stations')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dj_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DJ User',
                'verbose_name_plural': 'DJ Users',
                'db_table': 'djuser',
            },
        ),
        migrations.CreateModel(
            name='DJTracks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_art', models.FileField(blank=True, null=True, upload_to=airadio.models.library.get_file_path_for_djtrack_cover, verbose_name='Cover art')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('tags', models.CharField(max_length=255, verbose_name='Tags')),
                ('media', models.FileField(upload_to=airadio.models.library.get_file_path_for_dj_media, verbose_name='Media')),
                ('recorded', models.CharField(blank=True, editable=False, max_length=200, verbose_name='Recorded')),
                ('in_point', models.CharField(max_length=200, verbose_name='Mark In')),
                ('aux_point', models.CharField(max_length=200, verbose_name='Mark Aux')),
                ('published', models.BooleanField(default=True, verbose_name='Publish ?')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('dj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dj_user_tracks', to='airadio.djuser')),
            ],
            options={
                'verbose_name': 'DJTracks',
                'verbose_name_plural': 'DJTracks',
            },
        ),
        migrations.CreateModel(
            name='DJStationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Subscription Date')),
                ('dj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dj_station_status', to='airadio.djuser')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='station_dj_status', to='airadio.stations')),
            ],
            options={
                'verbose_name': 'DJ Station Subscription',
                'verbose_name_plural': 'DJ Station Subscriptions',
                'db_table': 'djstationstatus',
            },
        ),
        migrations.CreateModel(
            name='DJReputation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_followers', models.PositiveIntegerField(default=0, verbose_name='Followers')),
                ('dj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dj_reputation', to='airadio.djuser')),
            ],
            options={
                'verbose_name': 'DJ Reputation',
                'verbose_name_plural': 'DJ Reputations',
                'db_table': 'djreputation',
            },
        ),
        migrations.CreateModel(
            name='DJMusicBed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('url', models.CharField(max_length=255, verbose_name='URL')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='station_dj_musicbeds', to='airadio.stations')),
            ],
            options={
                'verbose_name': 'DJ Music Bed',
                'verbose_name_plural': 'DJ Music Beds',
                'db_table': 'djmusicbed',
            },
        ),
        migrations.CreateModel(
            name='DashboardTopSongs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('twitter', models.CharField(max_length=200, verbose_name='Twitter Account')),
                ('rating', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Rating')),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_topsongs', to='airadio.dashboard')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_topsongs_library', to='airadio.library')),
            ],
            options={
                'verbose_name': 'Dashboard Top Song',
                'verbose_name_plural': 'Dashboard Top Songs',
                'db_table': 'dashboardtopsongs',
                'ordering': ['-rating'],
            },
        ),
        migrations.CreateModel(
            name='BrandingTOH',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('duration', models.CharField(max_length=25, verbose_name='Duration')),
                ('in_point', models.CharField(max_length=25, verbose_name='Mark In')),
                ('aux_point', models.CharField(max_length=25, verbose_name='Mark Aux')),
                ('points', models.IntegerField(verbose_name='Points')),
                ('skip_allowed', models.BooleanField(default=True, verbose_name='Skip allowed')),
                ('media', models.URLField(verbose_name='Media URL')),
                ('relative_link', models.URLField(blank=True, verbose_name='Relative Link')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_branding_toh', to='airadio.locations')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='station_branding_toh', to='airadio.stations')),
            ],
            options={
                'verbose_name': 'BrandingTOH/IDS',
                'verbose_name_plural': 'BrandingTOH/IDS',
                'db_table': 'brandingtoh',
            },
        ),
        migrations.CreateModel(
            name='Adverts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_art', models.FileField(blank=True, upload_to=airadio.models.playlist.get_file_path_for_advert, verbose_name='Cover Image')),
                ('media', models.URLField(verbose_name='Media URL')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('type', models.CharField(blank=True, choices=[('banner', 'Banner'), ('audio', 'Audio'), ('video', 'Video'), ('social', 'Social')], max_length=255, null=True, verbose_name='Type')),
                ('banner_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='Banner Body Text')),
                ('age_group_from', models.IntegerField(verbose_name='Age Group')),
                ('age_group_to', models.IntegerField(verbose_name='To')),
                ('radius', models.IntegerField(verbose_name='Radius')),
                ('duration', models.CharField(max_length=25, verbose_name='Duration')),
                ('aux_point', models.CharField(max_length=255, verbose_name='Pos Chain')),
                ('points', models.IntegerField(verbose_name='Points')),
                ('microsite', models.URLField(blank=True, null=True, verbose_name='MicrositeURL')),
                ('skip_allowed', models.BooleanField(default=True, verbose_name='Skip allowed')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_adverts', to='airadio.locations')),
            ],
            options={
                'verbose_name': 'Advert',
                'verbose_name_plural': 'Adverts',
                'db_table': 'adverts',
            },
        ),
    ]
